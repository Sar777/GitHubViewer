{
  data: [
    {
      title: "Новый Омнибус Тьюринга",
      description: "Книга, обязательная к прочтению для любого заинтересованного компьютерами. Эта потрясающая книга состоит из 66 коротких очерков по наиболее важным и интересным компьютерным темам, таким как компрессия, машины Тьюринга, формальная грамматика, невычислимые функции, и нейронные сети. Книга написана повседневным простым языком и почти не содержит математики. Это моя самая любимая книга.",
      image_url: "Image url"
    },
    {
      title: "Маленькая книга о Семафорах",
      description: "Эта книга учит тому, как думать многопоточно и решать проблемы синхронизации. Я очень рекомендую её, особенно если вы самоучка. Она ведёт читателя шаг за шагом через серию классических и не очень проблем синхронизации. В ней очень интересно решаются данные проблемы, и я рекомендую её всем с тех пор, как впервые познакомился с ней.",
      image_url: "Image url"
    },
    {
      title: "Маленький комбинатор",
      description: "Маленький комбинатор даёт немножко знаний о LISP самым что ни на есть забавным способом. Книга — это диалог между тобой и автором о сотнях мелких программных комбинаций, который помимо прочего учит читателя думать рекурсивно. Эта книга заставит Тебя думать и немного расширит Твоё сознание. Это одна из самых интересных книг программирования из когда-либо написанных.",
      image_url: "Image url"
    },
    {
      title: "Элементы стиля и Элементы стиля программирования",
      description: "«Элементы стиля» — это книга не совсем о разработке или программировании, а скорее об умении писать. Если хочешь быть успешным программистом, необходимо общаться так, чтобы другим людям было понятно, а соответственно и навыки письма просто необходимы. В книге всего 100 страниц и её можно прочитать за один вечер. «Элементы стиля программирования» — классическая книга по программированию от Кернигана, на форму этой книги очень сильно повлияла книга «Элементы стиля». Это старая книга, но по большей части все, чему она учит, применимо и сегодня. Она состоит из 70 правил программирования, таких как «пишите понятно, — не пытайтесь казаться слишком умными»; «говорите, что вы хотите просто и точно»; «выбирайте способ представления данных, который делает программу простой»; «позвольте данным формировать структуру программы».",
      image_url: "Image url"
    },
    {
      title: "Code Complete («Совершенный код»)",
      description: "Это книга получила всеобщее признание как одно из лучших практических руководств по программированию. Эта книга помогает девелоперам писать лучшее ПО уже больше десяти лет. Второе издание книги было обогащено последними передовыми практиками разработки, а также сотнями примеров кода, демонстрирующих искусство программирования во всём его техническом совершенстве. Сочетая базовые знания из исследований, теоретические выкладки и ежедневную практику коммерческой разработки, МакКоннелл синтезирует наиболее эффективные техники, принципы, которые разработчики просто обязаны знать, и преподносит всё это в виде чётких и прагматичных рекомендаций. Не важно, какой у вас уровень опыта, среда разработки или размер проекта, эта книга расскажет вам, как писать код самого высокого качества, и будет стимулировать ваше мышление развиваться в правильную сторону.",
      image_url: "Image url"
    },
    {
      title: "The Pragmatic Programmer: From Journeyman to Master («Программист-прагматик: от подмастерья к мастеру»)",
      description: "Как и любое другое ремесло, программирование наработало с годами знания, которые не преподаются в университетах и не входят в программы сертификации. Большинство программистов узнают эти уловки и хитрости с течением времени, идя путём самостоятельных экспериментов. В «Прагматичном программисте» Эндрю Хант и Дэвид Томас раскрывают многие истины, которые они познали в течение своих заслуженных карьер дизайнеров и разработчиков ПО. Самое крутое в этой книге то, что она помогает сохранять свежий взгляд на программирование, помогает вам продолжать развиваться и ясно показывает вам как это делать, поскольку написана теми, кто уже прошёл этот путь.",
      image_url: "Image url"
    },
    {
      title: "Structure and Interpretation of Computer Programs («Структура и интерпретация компьютерных программ»),",
      description: "Учит читателей программировать, используя инструменты абстракции и модульности. Главная идея авторов заключается в том, что программирование – это задача и искусство разбивки больших задач на маленькие. Из книги вы узнаете кое-что о функциональном программировании, ленивых вычислениях, метапрограммировании (метаязыковой абстракции), виртуальных машинах, интерпретаторах и компиляторах. Книга изначально была написана для всемирно известного 6.001, вводного курса программирования в Массачусетском технологическом институте. Возможно, потребуется напрячь интеллект, чтобы её освоить, но результат стоит того.",
      image_url: "Image url"
    },
    {
      title: "The C Programming Language",
      description: "Краткая и легкая в чтении, она научит вас трём вещам: языку программирования С, думать, как программист, и пониманию абстрактной модели машины С (что и как работает, образно выражаясь, под капотом). Написана в соавторстве с Деннисом Ритчи, изобретателем языка программирования Си.",
      image_url: "Image url"
    },
    {
      title: "Introduction to Algorithms",
      description: "Библия в своей отрасли знаний, является всеобъемлющим учебником, охватывающим весь спектр современных алгоритмов: от самых быстрых алгоритмов и структур данных до полиномиальных алгоритмов для решения, казалось бы, неразрешимых проблем, от классических алгоритмов в теории графов до специальных алгоритмов для сравнения строк, вычислительной геометрии и теории чисел. Пересмотренное третье издание снабжено главой о деревьях Ван Эмде Боаса, одних из наиболее полезных структур данных, а также о многопоточных алгоритмах, которые сейчас приобретают все большее значение.",
      image_url: "Image url"
    },
    {
      title: "Refactoring: Improving the Design of Existing Code",
      description: "Рефакторинг – это способ улучшения дизайна существующего кода. Это процесс изменения программного обеспечения системы таким образом, что его внешнее поведение остаётся прежним, но улучшается внутренняя структура кода. С помощью рефакторинга вы можете даже взять плохой дизайн приложения и переделать его в хороший. Эта книга предлагает подробное обсуждение принципов рефакторинга, включая способы выявления возможностей применения рефакторинга и необходимого при этом тестирования. Также предлагается каталог из более 40 моментов рефакторинга, с подробной информацией о том, когда и почему нужно их использовать, пошаговыми инструкциями по их реализации, а также примерами того, как всё это работает и что даёт. Примеры в книге написаны для Java, но идеи применимы, в принципе, к любому языку OOП.",
      image_url: "Image url"
    },
    {
      title: "Design Patterns: Elements of Reusable Object-Oriented Software",
      description: "«Шаблоны проектирования» – это современная классика литературы об объектно-ориентированном программировании, предлагающая вневременные и элегантные решения общих проблем разработки ПО. Она описывает шаблоны управления созданием объектов, композиции объектов в более сложные структуры и координации контроля потоков между объектами. Книга содержит многочисленные примеры, когда использование композиции, а не наследования, может улучшить возможность повторного использования и придаст гибкость коду. Имейте в виду, что это не учебник, а каталог, который можно использовать для нахождения подходящего шаблона объектно-ориентированного проектирования для какого-то конкретного случая применения. Эта книга – выбор виртуозных программистов, которые ценят последовательный, хорошо разработанный объектно-ориентированный дизайн приложения.",
      image_url: "Image url"
    },
    {
      title: "The Mythical Man-Month: Essays on Software Engineering",
      description: "Немногие книги по управлению разработкой ПО могут похвастать таким весом в области профильных знаний и неизменным значением, как «Мифический человеко-месяц». Смешивая факты из практики инженерии ПО и заставляющие задуматься пассажи, Фред Брукс предлагает откровение для всех занимающихся управлением сложными проектами. Эти эссе рассказывают о его опыте проджект-менеджера на проектах на системе IBM System/360, а затем и OS/360. Сейчас, через двадцать лет после первого издания книги, Брукс пересматривает свои идеи и добавляет новые мысли и советы, одинаково интересные для тех, кто уже читал его книгу, и для новых читателей.",
      image_url: "Image url"
    },
    {
      title: "Art of Computer Programming, Volume 1: Fundamental Algorithms",
      description: "Библия функциональных алгоритмов, работа, которая научила многих современных программистов большинству того, что они знают о разработке ПО. Одной из самых сильных сторон книги является замечательные подборки задач, которые следуют после каждой главы. Автор тщательно выбрал проблемы и расположил их в соответствии с их сложностью. Решение значительного числа этих задач позволит вам получить четкое понимание о программировании. Кроме того, эти упражнения позволят вам познакомиться с решением ряда классических проблем.",
      image_url: "Image url"
    }
  ]
}